[{"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\index.js":"1","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\App.js":"2","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\reportWebVitals.js":"3","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\Classifications.js":"4","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\api\\trefle.js":"5","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Navigation.js":"6","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\LandingPage.js":"7","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\SearchPage.js":"8","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Search.js":"9","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ListCard.js":"10","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\PageHeader.js":"11","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\SectionHeader.js":"12","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\FilterMenu.js":"13","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\PlantPage.js":"14","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\CategoryPage.js":"15","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\hooks\\useFetch.js":"16","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGallery.js":"17","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGrid.js":"18"},{"size":266,"mtime":1608148438002,"results":"19","hashOfConfig":"20"},{"size":1358,"mtime":1608679873675,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1606495291126,"results":"22","hashOfConfig":"20"},{"size":3230,"mtime":1608400418526,"results":"23","hashOfConfig":"20"},{"size":222,"mtime":1608409068115,"results":"24","hashOfConfig":"20"},{"size":788,"mtime":1608401807191,"results":"25","hashOfConfig":"20"},{"size":1388,"mtime":1608404960075,"results":"26","hashOfConfig":"20"},{"size":6545,"mtime":1608742058312,"results":"27","hashOfConfig":"20"},{"size":1074,"mtime":1608579468934,"results":"28","hashOfConfig":"20"},{"size":1600,"mtime":1608579351977,"results":"29","hashOfConfig":"20"},{"size":802,"mtime":1608583863118,"results":"30","hashOfConfig":"20"},{"size":1297,"mtime":1608492482102,"results":"31","hashOfConfig":"20"},{"size":2431,"mtime":1608579491589,"results":"32","hashOfConfig":"20"},{"size":2846,"mtime":1608678523895,"results":"33","hashOfConfig":"20"},{"size":1696,"mtime":1608584053725,"results":"34","hashOfConfig":"20"},{"size":721,"mtime":1608581085397,"results":"35","hashOfConfig":"20"},{"size":3322,"mtime":1608683081431,"results":"36","hashOfConfig":"20"},{"size":1181,"mtime":1608682627253,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1lznqms",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\index.js",[],["80","81"],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\App.js",["82"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport LandingPage from './containers/LandingPage'\nimport SearchPage from './containers/SearchPage'\nimport PlantPage from './containers/PlantPage'\nimport CategoryPage from './containers/CategoryPage'\n\nimport Navigation from './components/Navigation'\n\nimport { Container,CssBaseline } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport './App.css'\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '10px',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#efefef',\n  },\n  app: {\n    backgroundImage: 'linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%)',\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Navigation />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Router>\n          <Route exact path='/'>\n            <LandingPage/>\n          </Route>\n          <Route exact path='/search'>\n            <SearchPage/>\n          </Route>\n          <Route exact path='/plant/:id'>\n            <PlantPage/>\n          </Route>\n          <Route exact path='/category/:category'>\n            <CategoryPage/>\n          </Route>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\reportWebVitals.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\Classifications.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\api\\trefle.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Navigation.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\LandingPage.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\SearchPage.js",["83","84","85","86","87","88"],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Search.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ListCard.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\PageHeader.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\SectionHeader.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\FilterMenu.js",["89"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filterButton: {\r\n        width: '100%',\r\n        height: '100%',\r\n        marginLeft: '10px'\r\n    }\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  \r\n  const StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  }))(MenuItem);\r\n  \r\n  const FilterMenu = () => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Button\r\n          aria-controls=\"customized-menu\"\r\n          aria-haspopup=\"true\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          className={classes.filterButton}\r\n          onClick={handleClick}\r\n        >\r\n          Filters\r\n        </Button>\r\n        <StyledMenu\r\n          id=\"customized-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <StyledMenuItem>\r\n\r\n            <ListItemText primary=\"Sent mail\" />\r\n          </StyledMenuItem>\r\n          <StyledMenuItem>\r\n\r\n            <ListItemText primary=\"Drafts\" />\r\n          </StyledMenuItem>\r\n          <StyledMenuItem>\r\n   \r\n            <ListItemText primary=\"Inbox\" />\r\n          </StyledMenuItem>\r\n        </StyledMenu>\r\n      </div>\r\n    );\r\n  }\r\n\r\nFilterMenu.propTypes = {\r\n\r\n}\r\n\r\nexport default FilterMenu\r\n","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\PlantPage.js",["90","91","92"],"import React, {useEffect,useState,useRef} from 'react'\r\n\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {useFetch} from '../hooks/useFetch'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PageHeader from '../components/PageHeader';\r\nimport SectionHeader from '../components/SectionHeader';\r\nimport ImageGallery from '../components/ImageGallery';\r\n\r\nconst PlantPage = () => {\r\n    let { id } = useParams();\r\n\r\n    const isComponentMounted = useRef(true);\r\n\r\n    const { data: plantData, loading, error } = useFetch(\r\n        `/api/v1/species/${id}`,\r\n        isComponentMounted,\r\n        []\r\n    );\r\n\r\n    console.log(plantData);\r\n    return ((loading) \r\n            ? <h1>Loading</h1>\r\n            : <div>\r\n                <PageHeader \r\n                    heading={plantData.common_name}\r\n                    subtext={plantData.scientific_name}\r\n                />\r\n                <SectionHeader  \r\n                    heading='Plant Metadata'\r\n                    subtext=''\r\n                />\r\n                <p><b>Author: </b>{plantData.author}</p>\r\n                <p><b>Family: </b>{plantData.family_common_name}({plantData.family})</p>\r\n                <p><b>Genus: </b>{plantData.genus}</p>\r\n                <p><b>Status: </b>{plantData.status}</p>\r\n                <p><b>Discovered: </b>{plantData.year}</p>\r\n\r\n\r\n                <SectionHeader  \r\n                    heading='Photo Gallery'\r\n                    subtext=''\r\n                />\r\n                <ImageGallery imageArray={plantData.images}/>\r\n                <SectionHeader  \r\n                    heading='Distribution'\r\n                    subtext=''\r\n                />\r\n                <SectionHeader  \r\n                    heading='Growing Information'\r\n                    subtext=''\r\n                />\r\n                <SectionHeader  \r\n                    heading='Sources'\r\n                    subtext=''\r\n                />\r\n                <SectionHeader  \r\n                    heading='Related'\r\n                    subtext=''\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nPlantPage.propTypes = {\r\n    id: PropTypes.number\r\n}\r\n\r\nexport default PlantPage\r\n\r\n\r\n// On Load\r\n// ---------\r\n// useEffect to retrieve plant data by ID and related species \r\n// Check to see what data differs from plant and species\r\n// ID of page can be passed to component and needs to be stored in URL for on page loads\r\n\r\n// Page Sections\r\n// ---------------\r\n// Plant Metadata (General information regarding plant)\r\n// Photo gallery\r\n// Map of areas the plant grows in\r\n// Growing Information\r\n// Scholarly Sources\r\n// Taxonomy Classifications\r\n// Related species or plants (Link to those pages)\r\n\r\n// UI\r\n// ---------\r\n// Page will be broken into 12 grid layout\r\n// 3 points are for page nav which includes assess to sections\r\n// 9 points are for the pages content","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\CategoryPage.js",["93"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PageHeader from '../components/PageHeader';\r\nimport SectionHeader from '../components/SectionHeader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nconst CategoryPage = () => {\r\n    const classes = useStyles();\r\n    let { category } = useParams();\r\n    return (\r\n        <div>\r\n              <PageHeader \r\n                heading={category.split('-').join(' ')}\r\n                subtext='Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt.'\r\n            />\r\n              <SectionHeader  \r\n                heading='Section'\r\n                subtext=''\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nCategoryPage.propTypes = {\r\n    category: PropTypes.string\r\n}\r\n\r\nexport default CategoryPage\r\n\r\n// On Load\r\n// ---------\r\n// Switch statement to determine category selected and return a request url per case\r\n// useEffect to retrieve plant data by request url\r\n// category needs to be in the url and passed as a prop for on page loads\r\n\r\n// Page Sections\r\n// ---------------\r\n\r\n\r\n// UI\r\n// ---------\r\n// Page will be broken into 12 grid layout\r\n// 3 points are for page nav which includes assess to sections\r\n// 9 points are for the pages content","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\hooks\\useFetch.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGallery.js",["94","95","96"],"import React from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport {AppBar,Tabs,Tab,Typography,Box} from '@material-ui/core';\r\n\r\nimport ImageGrid from './ImageGrid';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        \r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `scrollable-auto-tab-${index}`,\r\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n  \r\nconst ImageGallery = ({imageArray}) => {\r\n    const classes = useStyles();\r\n\r\n    console.log(imageArray);\r\n\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    const handleChangeIndex = (index) => {\r\n      setValue(index);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"scrollable auto tabs example\"\r\n          >\r\n            <Tab label=\"Bark\" {...a11yProps(0)} />\r\n            <Tab label=\"Flowers\" {...a11yProps(1)} />\r\n            <Tab label=\"Fruit\" {...a11yProps(2)} />\r\n            <Tab label=\"Habit\" {...a11yProps(3)} />\r\n            <Tab label=\"Leaf\" {...a11yProps(4)} />\r\n            <Tab label=\"Other\" {...a11yProps(5)} />\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        <TabPanel value={value} index={0} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.bark}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} className={classes.tabPanel}> \r\n          <ImageGrid images={imageArray.flower}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.fruit}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.habit}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={4} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.leaf}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={5} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.other}/>\r\n        </TabPanel>\r\n    </div>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    imageArray: PropTypes.array\r\n}\r\n\r\nexport default ImageGallery\r\n","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGrid.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":42,"nodeType":"103","messageId":"104","endLine":1,"endColumn":48},{"ruleId":"101","severity":1,"message":"105","line":1,"column":26,"nodeType":"103","messageId":"104","endLine":1,"endColumn":35},{"ruleId":"101","severity":1,"message":"106","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":17},{"ruleId":"101","severity":1,"message":"107","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":14},{"ruleId":"101","severity":1,"message":"108","line":78,"column":12,"nodeType":"103","messageId":"104","endLine":78,"endColumn":25},{"ruleId":"101","severity":1,"message":"109","line":78,"column":27,"nodeType":"103","messageId":"104","endLine":78,"endColumn":43},{"ruleId":"101","severity":1,"message":"110","line":80,"column":28,"nodeType":"103","messageId":"104","endLine":80,"endColumn":33},{"ruleId":"101","severity":1,"message":"106","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"111","line":1,"column":26,"nodeType":"103","messageId":"104","endLine":1,"endColumn":34},{"ruleId":"101","severity":1,"message":"110","line":18,"column":39,"nodeType":"103","messageId":"104","endLine":18,"endColumn":44},{"ruleId":"101","severity":1,"message":"112","line":15,"column":11,"nodeType":"103","messageId":"104","endLine":15,"endColumn":18},{"ruleId":"101","severity":1,"message":"113","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":22},{"ruleId":"101","severity":1,"message":"114","line":7,"column":22,"nodeType":"103","messageId":"104","endLine":7,"endColumn":30},{"ruleId":"101","severity":1,"message":"115","line":66,"column":11,"nodeType":"103","messageId":"104","endLine":66,"endColumn":28},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'trefle' is defined but never used.","'requestParams' is assigned a value but never used.","'setRequestParams' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'classes' is assigned a value but never used.","'SwipeableViews' is defined but never used.","'useTheme' is defined but never used.","'handleChangeIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]