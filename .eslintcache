[{"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\index.js":"1","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\App.js":"2","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\reportWebVitals.js":"3","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\Classifications.js":"4","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\api\\trefle.js":"5","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Navigation.js":"6","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\LandingPage.js":"7","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\SearchPage.js":"8","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Search.js":"9","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ListCard.js":"10","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\PageHeader.js":"11","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\SectionHeader.js":"12","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\FilterMenu.js":"13","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\PlantPage.js":"14","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\CategoryPage.js":"15","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\hooks\\useFetch.js":"16","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGallery.js":"17","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGrid.js":"18","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Map.js":"19"},{"size":266,"mtime":1608148438002,"results":"20","hashOfConfig":"21"},{"size":1358,"mtime":1608679873675,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1606495291126,"results":"23","hashOfConfig":"21"},{"size":3230,"mtime":1608400418526,"results":"24","hashOfConfig":"21"},{"size":222,"mtime":1608409068115,"results":"25","hashOfConfig":"21"},{"size":788,"mtime":1608401807191,"results":"26","hashOfConfig":"21"},{"size":1388,"mtime":1608404960075,"results":"27","hashOfConfig":"21"},{"size":6544,"mtime":1608762331740,"results":"28","hashOfConfig":"21"},{"size":1074,"mtime":1608579468934,"results":"29","hashOfConfig":"21"},{"size":1600,"mtime":1608579351977,"results":"30","hashOfConfig":"21"},{"size":802,"mtime":1608583863118,"results":"31","hashOfConfig":"21"},{"size":1297,"mtime":1608492482102,"results":"32","hashOfConfig":"21"},{"size":2431,"mtime":1608579491589,"results":"33","hashOfConfig":"21"},{"size":7729,"mtime":1608823859298,"results":"34","hashOfConfig":"21"},{"size":1696,"mtime":1608584053725,"results":"35","hashOfConfig":"21"},{"size":721,"mtime":1608581085397,"results":"36","hashOfConfig":"21"},{"size":3294,"mtime":1608761606460,"results":"37","hashOfConfig":"21"},{"size":1181,"mtime":1608682627253,"results":"38","hashOfConfig":"21"},{"size":2214,"mtime":1608762742525,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1lznqms",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\index.js",[],["85","86"],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\App.js",["87"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport LandingPage from './containers/LandingPage'\nimport SearchPage from './containers/SearchPage'\nimport PlantPage from './containers/PlantPage'\nimport CategoryPage from './containers/CategoryPage'\n\nimport Navigation from './components/Navigation'\n\nimport { Container,CssBaseline } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport './App.css'\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '10px',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#efefef',\n  },\n  app: {\n    backgroundImage: 'linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%)',\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Navigation />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Router>\n          <Route exact path='/'>\n            <LandingPage/>\n          </Route>\n          <Route exact path='/search'>\n            <SearchPage/>\n          </Route>\n          <Route exact path='/plant/:id'>\n            <PlantPage/>\n          </Route>\n          <Route exact path='/category/:category'>\n            <CategoryPage/>\n          </Route>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\reportWebVitals.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\Classifications.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\api\\trefle.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Navigation.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\LandingPage.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\SearchPage.js",["88","89","90","91","92","93"],"import React, {useState, useEffect,useRef } from 'react'\r\n\r\nimport {useFetch} from '../hooks/useFetch'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport trefle from '../api/trefle'\r\n\r\nimport {Button} from '@material-ui/core/';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Search from '../components/Search';\r\nimport ListCard from '../components/ListCard';\r\nimport PageHeader from '../components/PageHeader';\r\nimport SectionHeader from '../components/SectionHeader';\r\nimport FilterMenu from '../components/FilterMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    cardContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: '10px'\r\n    },\r\n    buttonContainer: {\r\n        margin: '30px 0px'\r\n    },\r\n    buttonCat: {\r\n        margin: '10px',\r\n        textTransform: 'lowercase',\r\n        fontWeight: 'bold',\r\n        padding: '30px 0px',\r\n        minWidth: '220px'\r\n    },\r\n    buttonLearnMore: {\r\n        width: '100%',\r\n        borderTopLeftRadius: 0,\r\n        borderTopRightRadius: 0,\r\n        textTransform: 'lowercase'\r\n    },\r\n    searchContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: 'calc(100% - 30px)',\r\n        margin: '30px 10px',\r\n        alignItems: 'stretch'\r\n    },\r\n    section: {\r\n        width: '100%'\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: '#fff',\r\n        width: '100%'\r\n\r\n    }\r\n}));\r\n\r\nconst SearchPage = () => {\r\n    const classes = useStyles();\r\n    const isComponentMounted = useRef(true);\r\n\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [requestEndpoint, setRequestEndpoint] = useState('/api/v1/plants/?page=9')\r\n    const [requestParams, setRequestParams] = useState([])\r\n\r\n    const { data, loading, error } = useFetch(\r\n        requestEndpoint,\r\n        isComponentMounted,\r\n        []\r\n      );\r\n\r\n    const searchChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n        createRequestUrl(searchQuery);\r\n    }\r\n\r\n    const createRequestUrl = (q) => {\r\n        setRequestEndpoint(`/api/v1/plants?q=${q}`);\r\n    }\r\n\r\n    function PlantResults() {\r\n        return data.map((plant,i) => (\r\n            <ListCard \r\n            key={i}\r\n            title={plant.common_name} \r\n            subtext={plant.scientific_name} \r\n            imagePath={plant.image_url} \r\n            button={\r\n                <Link className={classes.link} to={`/plant/${plant.id}`}><Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.buttonLearnMore}>\r\n                View</Button> </Link>\r\n            }\r\n            />\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <PageHeader \r\n                heading='Plants and Species'\r\n                subtext='Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt.'\r\n            />\r\n\r\n            <section id=\"section-popular-categories\" className={classes.section} >\r\n                <SectionHeader  \r\n                    heading='Popular Categories'\r\n                    subtext='Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt. '\r\n                />\r\n                <div className={classes.buttonContainer}>\r\n                   \r\n                    <Link className={classes.link} to=\"/category/recent-discoveries\"> <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.buttonCat}>recently discoveries</Button></Link>\r\n                    <Link className={classes.link} to=\"/category/oldest-discoveries\"> <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.buttonCat}>oldest discoveries</Button></Link>\r\n                    <Link className={classes.link} to=\"/category/edible\"> <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.buttonCat}>edible</Button></Link>\r\n                    <Link className={classes.link} to=\"/category/vegetables\"> <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.buttonCat}>vegetables</Button></Link>\r\n                    <Link className={classes.link} to=\"/category/plants-by-rank\"> <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.buttonCat}>plants by rank</Button></Link>\r\n                </div>\r\n            </section>\r\n            \r\n            <section id=\"section-search\" className={classes.section} >\r\n                <SectionHeader  \r\n                    heading='Search by Name'\r\n                    subtext=''\r\n                />\r\n                <div className={classes.searchContainer}>\r\n                    <Search \r\n                        id='search-bar'\r\n                        label='Search'\r\n                        placeholder='Enter a species or plant'\r\n                        disabled={false}\r\n                        handleChange={searchChange}\r\n                    />\r\n                    <FilterMenu/>\r\n                </div>\r\n            </section>\r\n                \r\n            <section id=\"section-search-results\" className={classes.section} >\r\n                {(loading)\r\n                ? <h2>Loading</h2>\r\n                :(\r\n                    <div className={classes.cardContainer}>\r\n                        <PlantResults />\r\n                    </div>\r\n                )\r\n                } \r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nSearchPage.propTypes = {\r\n\r\n}\r\n\r\nexport default SearchPage\r\n\r\n// Filters\r\n// -------\r\n// Common Name\r\n// Scientific_name\r\n// Edible\r\n// Vegetable \r\n// Author\r\n// Year\r\n// Family Name\r\n// Duration (Life Cycle)\r\n// Has scientific sources\r\n// Foliage\r\n// Fruit or Seeds\r\n// Produced Flowers\r\n\r\n// Range\r\n// -------\r\n// Max-Height\r\n// Ph-min-max\r\n\r\n// Order\r\n// Year\r\n// Scientific name","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Search.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ListCard.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\PageHeader.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\SectionHeader.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\FilterMenu.js",["94"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filterButton: {\r\n        width: '100%',\r\n        height: '100%',\r\n        marginLeft: '10px'\r\n    }\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  \r\n  const StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  }))(MenuItem);\r\n  \r\n  const FilterMenu = () => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Button\r\n          aria-controls=\"customized-menu\"\r\n          aria-haspopup=\"true\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          className={classes.filterButton}\r\n          onClick={handleClick}\r\n        >\r\n          Filters\r\n        </Button>\r\n        <StyledMenu\r\n          id=\"customized-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <StyledMenuItem>\r\n\r\n            <ListItemText primary=\"Sent mail\" />\r\n          </StyledMenuItem>\r\n          <StyledMenuItem>\r\n\r\n            <ListItemText primary=\"Drafts\" />\r\n          </StyledMenuItem>\r\n          <StyledMenuItem>\r\n   \r\n            <ListItemText primary=\"Inbox\" />\r\n          </StyledMenuItem>\r\n        </StyledMenu>\r\n      </div>\r\n    );\r\n  }\r\n\r\nFilterMenu.propTypes = {\r\n\r\n}\r\n\r\nexport default FilterMenu\r\n","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\PlantPage.js",["95","96","97","98"],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\containers\\CategoryPage.js",["99"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PageHeader from '../components/PageHeader';\r\nimport SectionHeader from '../components/SectionHeader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nconst CategoryPage = () => {\r\n    const classes = useStyles();\r\n    let { category } = useParams();\r\n    return (\r\n        <div>\r\n              <PageHeader \r\n                heading={category.split('-').join(' ')}\r\n                subtext='Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat vero, dicta labore sit ipsum corrupti natus! Quidem sint perferendis, beatae sit dicta, quasi non iure placeat asperiores, alias vel nesciunt.'\r\n            />\r\n              <SectionHeader  \r\n                heading='Section'\r\n                subtext=''\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nCategoryPage.propTypes = {\r\n    category: PropTypes.string\r\n}\r\n\r\nexport default CategoryPage\r\n\r\n// On Load\r\n// ---------\r\n// Switch statement to determine category selected and return a request url per case\r\n// useEffect to retrieve plant data by request url\r\n// category needs to be in the url and passed as a prop for on page loads\r\n\r\n// Page Sections\r\n// ---------------\r\n\r\n\r\n// UI\r\n// ---------\r\n// Page will be broken into 12 grid layout\r\n// 3 points are for page nav which includes assess to sections\r\n// 9 points are for the pages content","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\hooks\\useFetch.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGallery.js",["100","101","102"],"import React from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport {AppBar,Tabs,Tab,Typography,Box} from '@material-ui/core';\r\n\r\nimport ImageGrid from './ImageGrid';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        \r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `scrollable-auto-tab-${index}`,\r\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n  \r\nconst ImageGallery = ({imageArray}) => {\r\n    const classes = useStyles();\r\n    \r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    const handleChangeIndex = (index) => {\r\n      setValue(index);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"scrollable auto tabs example\"\r\n          >\r\n            <Tab label=\"Bark\" {...a11yProps(0)} />\r\n            <Tab label=\"Flowers\" {...a11yProps(1)} />\r\n            <Tab label=\"Fruit\" {...a11yProps(2)} />\r\n            <Tab label=\"Habit\" {...a11yProps(3)} />\r\n            <Tab label=\"Leaf\" {...a11yProps(4)} />\r\n            <Tab label=\"Other\" {...a11yProps(5)} />\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        <TabPanel value={value} index={0} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.bark}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} className={classes.tabPanel}> \r\n          <ImageGrid images={imageArray.flower}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.fruit}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.habit}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={4} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.leaf}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={5} className={classes.tabPanel}>\r\n          <ImageGrid images={imageArray.other}/>\r\n        </TabPanel>\r\n    </div>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    imageArray: PropTypes.array\r\n}\r\n\r\nexport default ImageGallery\r\n","C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\ImageGrid.js",[],"C:\\Users\\austi\\Desktop\\react-plant-taxonomy\\src\\components\\Map.js",["103","104","105","106","107","108"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGlobe } from \"react-simple-maps\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CountryCodes from '../json/CountryCodes.json'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    },\r\n    mapWrapper : {\r\n        height: 'auto',\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nconst geoUrl =\r\n  \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\r\n\r\n\r\nconst Map = ({names}) => {\r\n    const classes = useStyles();\r\n\r\n    const displayColorForGeography = geography => {\r\n        if(names.native?.includes(geography.properties.name)) {\r\n            return \"green\"\r\n        }else if(names.introduced?.includes(geography.properties.name)) {\r\n            return \"blue\"\r\n        }else if(names.doubtful?.includes(geography.properties.name)) {\r\n            return \"orange\"\r\n        }else if(names.absent?.includes(geography.properties.name)) {\r\n            return \"yellow\"\r\n        }else if(names.extinct?.includes(geography.properties.name)) {\r\n            return \"red\"\r\n        }\r\n        return \"#DDD\";\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <ComposableMap\r\n            className={classes.mapWrapper}\r\n        >\r\n           <Geographies geography={geoUrl}>\r\n            {({ geographies, projection }) =>\r\n                geographies\r\n                .map((geo,i) => (\r\n                    <Geography\r\n                    key={i}\r\n                    geography={geo}\r\n                    projection={projection}\r\n                    fill=\"#DDD\"\r\n                    stroke=\"#FFF\"\r\n                    style={{\r\n                        default: {\r\n                            fill: displayColorForGeography(geo),\r\n                            outline: \"none\"\r\n                        },\r\n                        }}\r\n                    />\r\n                ))\r\n            }\r\n            </Geographies>\r\n        </ComposableMap>\r\n      </div>\r\n    )\r\n}\r\n\r\nMap.propTypes = {\r\n\r\n}\r\n\r\nexport default Map\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":42,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},{"ruleId":"113","severity":1,"message":"117","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":35},{"ruleId":"113","severity":1,"message":"118","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":17},{"ruleId":"113","severity":1,"message":"119","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":14},{"ruleId":"113","severity":1,"message":"120","line":78,"column":12,"nodeType":"115","messageId":"116","endLine":78,"endColumn":25},{"ruleId":"113","severity":1,"message":"121","line":78,"column":27,"nodeType":"115","messageId":"116","endLine":78,"endColumn":43},{"ruleId":"113","severity":1,"message":"122","line":80,"column":28,"nodeType":"115","messageId":"116","endLine":80,"endColumn":33},{"ruleId":"113","severity":1,"message":"118","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"123","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":34},{"ruleId":"113","severity":1,"message":"124","line":16,"column":8,"nodeType":"115","messageId":"116","endLine":16,"endColumn":15},{"ruleId":"113","severity":1,"message":"122","line":42,"column":39,"nodeType":"115","messageId":"116","endLine":42,"endColumn":44},{"ruleId":"113","severity":1,"message":"125","line":15,"column":11,"nodeType":"115","messageId":"116","endLine":15,"endColumn":18},{"ruleId":"113","severity":1,"message":"126","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":22},{"ruleId":"113","severity":1,"message":"127","line":7,"column":22,"nodeType":"115","messageId":"116","endLine":7,"endColumn":30},{"ruleId":"113","severity":1,"message":"128","line":64,"column":11,"nodeType":"115","messageId":"116","endLine":64,"endColumn":28},{"ruleId":"113","severity":1,"message":"118","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"129","line":3,"column":49,"nodeType":"115","messageId":"116","endLine":3,"endColumn":55},{"ruleId":"113","severity":1,"message":"130","line":3,"column":57,"nodeType":"115","messageId":"116","endLine":3,"endColumn":64},{"ruleId":"113","severity":1,"message":"131","line":3,"column":66,"nodeType":"115","messageId":"116","endLine":3,"endColumn":79},{"ruleId":"113","severity":1,"message":"132","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":20},{"ruleId":"113","severity":1,"message":"133","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":29},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'trefle' is defined but never used.","'requestParams' is assigned a value but never used.","'setRequestParams' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.","'SwipeableViews' is defined but never used.","'useTheme' is defined but never used.","'handleChangeIndex' is assigned a value but never used.","'Marker' is defined but never used.","'Markers' is defined but never used.","'ZoomableGlobe' is defined but never used.","'CountryCodes' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]